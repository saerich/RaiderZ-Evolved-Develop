#include "stdafx.h"
#include "XCheckSumEncrypt.h"



const static unsigned char ENCRYPTKEY[ 1024] =
{
	0xDD, 0x31, 0xA8, 0xDA, 0xB1, 0x55, 0x9E, 0x12, 0xFB, 0xE0, 0x05, 0x09, 0xD8, 0x49, 0x06, 0x91,
	0xDB, 0xAB, 0xE0, 0x3E, 0x5D, 0xC9, 0xDE, 0x83, 0x14, 0x4F, 0x87, 0x19, 0xE8, 0x5B, 0x14, 0xA0,
	0x01, 0x3B, 0x27, 0x89, 0x25, 0x79, 0xB9, 0x33, 0x41, 0x14, 0x54, 0x54, 0x45, 0x11, 0x83, 0x9B,
	0x35, 0x32, 0x88, 0x94, 0x7D, 0x06, 0x4C, 0xCB, 0x86, 0x22, 0x9C, 0x34, 0x86, 0xAD, 0x91, 0xCA,
	0x9C, 0x22, 0x50, 0x77, 0x1C, 0x51, 0xF4, 0x34, 0x28, 0xA7, 0xC9, 0x71, 0x80, 0xB0, 0xBB, 0xB7,
	0x9A, 0xDA, 0x0E, 0x8C, 0xF6, 0x7C, 0x4F, 0x97, 0xAC, 0x16, 0x8A, 0x04, 0x47, 0xDB, 0xBD, 0x2A,
	0xD5, 0x6C, 0x8D, 0x6B, 0x3F, 0xE7, 0x38, 0x5C, 0xD7, 0x20, 0xCB, 0x26, 0x30, 0x2E, 0x95, 0x2D,
	0x32, 0x2A, 0xDB, 0xEF, 0x6D, 0x33, 0xCD, 0x2E, 0xAE, 0xB5, 0xB9, 0x51, 0xD0, 0xEB, 0x7F, 0x08,
	0xD5, 0xA3, 0x45, 0x2F, 0x36, 0x42, 0x6B, 0xF5, 0x76, 0x07, 0xC1, 0x3D, 0xFD, 0x94, 0xF8, 0x44,
	0x24, 0xAA, 0x57, 0x84, 0x8D, 0x34, 0xAF, 0xD9, 0xB5, 0x87, 0x91, 0xE3, 0xCC, 0xE8, 0xBE, 0xAB,
	0xC4, 0x4E, 0xDF, 0x89, 0xA8, 0x6A, 0x77, 0x45, 0x2F, 0xE5, 0x15, 0x7C, 0x91, 0xE9, 0xCE, 0x45,
	0x99, 0xE2, 0xEA, 0x15, 0xFB, 0x86, 0xDE, 0xE0, 0xE9, 0x13, 0x7B, 0x81, 0xE1, 0xD7, 0x64, 0x5C,
	0xC9, 0xF6, 0xC5, 0x42, 0x3D, 0x68, 0x42, 0x95, 0x28, 0x41, 0x2E, 0xAC, 0x91, 0x35, 0xFE, 0x78,
	0xB8, 0x5B, 0xFD, 0x68, 0x62, 0x31, 0x41, 0x8B, 0x71, 0xE1, 0xDD, 0xF5, 0xB7, 0xC2, 0x58, 0x63,
	0x0C, 0x22, 0x5E, 0x22, 0x9E, 0x43, 0xB6, 0x2C, 0x89, 0xA3, 0x74, 0x95, 0xA8, 0x80, 0x70, 0x25,
	0xAA, 0x9C, 0xF6, 0x47, 0x68, 0x3E, 0xBF, 0x21, 0x75, 0x79, 0x20, 0x05, 0xF7, 0xB0, 0x82, 0x08,
	0xB6, 0x5A, 0x12, 0xF0, 0x73, 0x03, 0xBA, 0x54, 0x7B, 0x93, 0x4F, 0xFE, 0x7C, 0xD3, 0x0C, 0x94,
	0x96, 0x2D, 0x3F, 0x78, 0xB5, 0xB4, 0x42, 0xEC, 0x1F, 0x64, 0xAD, 0x7A, 0x49, 0xAA, 0xCA, 0x93,
	0xEF, 0x27, 0x49, 0x76, 0x63, 0xB1, 0x35, 0x53, 0x26, 0x9A, 0x27, 0xB0, 0xB5, 0x35, 0xBA, 0x0D,
	0xA5, 0x97, 0x3E, 0xC3, 0xF2, 0x9B, 0xB1, 0x32, 0x95, 0x29, 0xEB, 0x1B, 0x54, 0xB7, 0x18, 0x4B,
	0xDE, 0x0F, 0x6B, 0x7A, 0x17, 0x53, 0x11, 0x72, 0xB1, 0x3F, 0x64, 0x74, 0xFC, 0xAF, 0x62, 0xD7,
	0xFF, 0x61, 0x5D, 0xF2, 0xC7, 0xFB, 0xF3, 0x3C, 0xFF, 0x50, 0x41, 0xB2, 0xC1, 0xDF, 0x54, 0x79,
	0xAC, 0x9C, 0xE0, 0xC5, 0x37, 0xF4, 0x35, 0xF9, 0x44, 0x0B, 0x6E, 0x10, 0xF9, 0x48, 0xEC, 0x3B,
	0xCB, 0x13, 0x03, 0xCB, 0xDB, 0xDD, 0xF2, 0x52, 0x86, 0x61, 0x19, 0x05, 0x37, 0x2A, 0x66, 0x65,
	0x80, 0x56, 0x11, 0x1F, 0x6A, 0x99, 0x89, 0x30, 0x09, 0x85, 0xAE, 0x4C, 0x53, 0x08, 0x40, 0x81,
	0x32, 0x36, 0x97, 0x18, 0xD7, 0x48, 0x95, 0xBC, 0x52, 0xE5, 0xDA, 0xDE, 0x5F, 0xA1, 0x36, 0x57,
	0x83, 0xC4, 0x64, 0x4F, 0x58, 0x4C, 0xF5, 0x5E, 0x25, 0x35, 0x8A, 0xF2, 0xB2, 0xF7, 0x46, 0xF1,
	0x5B, 0x51, 0x83, 0x9F, 0x62, 0x45, 0xC4, 0xC1, 0x8A, 0x64, 0xEB, 0x03, 0xE1, 0x4B, 0xAD, 0x97,
	0xDD, 0x6E, 0x42, 0x1F, 0xAA, 0x14, 0x61, 0xCD, 0xC3, 0xA3, 0x6B, 0xC8, 0xC0, 0x1E, 0xE7, 0xD2,
	0x6E, 0xEC, 0x2E, 0x29, 0x25, 0xDB, 0x67, 0xAA, 0x56, 0x64, 0xB6, 0x3C, 0x64, 0x31, 0xB1, 0x6C,
	0xB5, 0xDC, 0x14, 0x55, 0x08, 0xFA, 0xB5, 0xC3, 0x09, 0x58, 0xBA, 0x98, 0x22, 0x84, 0x09, 0x6E,
	0x95, 0x8F, 0x00, 0x7D, 0xC8, 0x12, 0x67, 0xBF, 0xDF, 0x6F, 0xA2, 0x53, 0x90, 0x59, 0x2B, 0x20,
	0x33, 0x97, 0x40, 0xBA, 0x19, 0x04, 0xD9, 0x89, 0x1F, 0xDB, 0xDD, 0x28, 0x83, 0x31, 0x95, 0x0B,
	0xF6, 0xC3, 0x61, 0x65, 0xF2, 0xF2, 0xAA, 0x48, 0x4D, 0x0C, 0x17, 0x0E, 0x0F, 0xCD, 0x04, 0xF9,
	0x81, 0x26, 0x30, 0x16, 0x86, 0x3C, 0xB5, 0x67, 0x2E, 0xB4, 0x3E, 0x40, 0x89, 0x2E, 0x74, 0xF2,
	0xB9, 0x0F, 0xB9, 0xA7, 0x4B, 0x84, 0x19, 0x8D, 0xC8, 0xC4, 0x7D, 0x37, 0x86, 0x95, 0x22, 0x40,
	0xC4, 0x11, 0x4A, 0x31, 0xF6, 0xAA, 0x32, 0xA4, 0x5E, 0x6C, 0x43, 0xAA, 0xDC, 0x82, 0x8C, 0x6B,
	0x07, 0xFC, 0x70, 0x0C, 0x7C, 0xCF, 0x9C, 0xD6, 0x77, 0x1D, 0x3D, 0x94, 0xA0, 0xB7, 0x6F, 0x3C,
	0x27, 0xE1, 0xF8, 0xD2, 0x12, 0x55, 0x36, 0x8A, 0xD6, 0x8A, 0x56, 0x2D, 0x25, 0x35, 0xC7, 0xBD,
	0x08, 0x11, 0xEE, 0x5C, 0x2D, 0xDB, 0x1C, 0x6A, 0x82, 0xA1, 0xBD, 0xEE, 0x03, 0x3D, 0xD2, 0x37,
	0xCF, 0x1D, 0xA1, 0xC3, 0x82, 0x45, 0xAA, 0x5F, 0xBF, 0x96, 0xDE, 0x90, 0x0C, 0x50, 0x0C, 0x32,
	0xE3, 0xD6, 0x9C, 0x5F, 0x05, 0xB1, 0x7F, 0x92, 0x12, 0xD8, 0x66, 0x0C, 0x57, 0x2E, 0x32, 0x77,
	0xE7, 0x4D, 0xAC, 0xCA, 0xED, 0x82, 0x77, 0x6C, 0x40, 0x18, 0x43, 0x9C, 0x38, 0xDA, 0x42, 0x10,
	0xC1, 0xD3, 0xE0, 0xDC, 0xAD, 0x58, 0xAF, 0x96, 0x4F, 0x49, 0xA0, 0xB8, 0x45, 0x93, 0x79, 0x45,
	0x95, 0xF9, 0x83, 0xB0, 0xFC, 0x15, 0x83, 0xF9, 0x82, 0x99, 0xEC, 0x19, 0x52, 0xDB, 0x53, 0xA0,
	0xC9, 0x91, 0x23, 0x9D, 0xCD, 0xD8, 0x92, 0xBE, 0x60, 0x7C, 0xD4, 0xB8, 0x74, 0x73, 0x8E, 0xE9,
	0x01, 0xAA, 0x8D, 0x3C, 0x56, 0x05, 0xB8, 0x4E, 0xAD, 0xA1, 0x43, 0xCF, 0x01, 0x5C, 0x26, 0x2A,
	0x24, 0x97, 0xCE, 0x68, 0x0C, 0x3A, 0x12, 0x51, 0x6D, 0xF9, 0x68, 0xD5, 0x8E, 0xD6, 0x59, 0xAB,
	0x55, 0xE7, 0x32, 0x38, 0xA3, 0x5A, 0xFD, 0xB2, 0xE8, 0xB6, 0xAF, 0x85, 0xEE, 0x63, 0xA3, 0xF6,
	0xF9, 0x6D, 0x47, 0x06, 0x12, 0x85, 0x16, 0x99, 0xA0, 0x49, 0xC6, 0xD7, 0x38, 0xC5, 0xC2, 0xD3,
	0xB6, 0x39, 0xDA, 0x6A, 0x8D, 0x1C, 0x39, 0x6F, 0x5B, 0x62, 0x98, 0x05, 0xC1, 0xFB, 0xB2, 0x4B,
	0x71, 0x9C, 0xF8, 0x3F, 0x88, 0xC1, 0x85, 0xDC, 0x1F, 0xF3, 0x54, 0x86, 0x1C, 0x46, 0xB1, 0xA8,
	0x4E, 0x27, 0xED, 0x9C, 0xBA, 0x54, 0x56, 0xCB, 0x2F, 0x2C, 0x66, 0x15, 0x21, 0x29, 0x3B, 0x73,
	0xB4, 0xAB, 0x47, 0xDA, 0x16, 0xF7, 0x49, 0x63, 0x12, 0x7F, 0x7C, 0xAA, 0xE2, 0x64, 0x0E, 0x73,
	0x45, 0x39, 0xD3, 0x94, 0xD2, 0x0A, 0x3B, 0x0F, 0x8C, 0x9C, 0x82, 0x7E, 0xB6, 0xF7, 0x26, 0xB4,
	0xE9, 0x22, 0x9E, 0xA1, 0x63, 0x2E, 0x49, 0x76, 0xA2, 0x75, 0xA5, 0x0A, 0x32, 0x24, 0xC1, 0x7C,
	0xC3, 0xF7, 0xF5, 0x1B, 0x7E, 0x44, 0xD0, 0x82, 0x99, 0x3B, 0x52, 0x07, 0x29, 0x6C, 0x5B, 0x57,
	0x38, 0x8A, 0x64, 0x5A, 0x18, 0x6E, 0x6D, 0x5D, 0xF6, 0x5E, 0x36, 0x6F, 0xB2, 0x90, 0xB2, 0x0B,
	0xEF, 0xEA, 0xB9, 0xF8, 0x66, 0x0C, 0xFD, 0x6E, 0x7F, 0x90, 0x3F, 0x7A, 0x22, 0x90, 0xC3, 0xA3,
	0xCA, 0x69, 0x01, 0xCE, 0xDC, 0xBF, 0x9D, 0x5F, 0x38, 0xC2, 0x99, 0xA1, 0x0D, 0xAF, 0xCA, 0x68,
	0xF1, 0x99, 0x88, 0xF5, 0x31, 0x69, 0xAA, 0x19, 0x65, 0x24, 0xB2, 0x9E, 0x48, 0x6C, 0x44, 0xE2,
	0xC7, 0x4A, 0xDD, 0xC5, 0x58, 0x2A, 0xC1, 0xC5, 0x8D, 0x27, 0x35, 0x68, 0xE9, 0x89, 0xEF, 0xDB,
	0xF2, 0x8C, 0xCB, 0xD8, 0x87, 0x64, 0xBF, 0xCC, 0x74, 0x7D, 0x11, 0x3A, 0x44, 0x07, 0xC7, 0x5A,
	0x57, 0xB2, 0x60, 0x07, 0x34, 0xB6, 0xC1, 0xD8, 0x1F, 0x17, 0x72, 0x8C, 0xEF, 0x27, 0x0A, 0xAB,
};





XCheckSumEncrypt::XCheckSumEncrypt()
{
}


XCheckSumEncrypt::~XCheckSumEncrypt()
{
}


bool XCheckSumEncrypt::Encrypt( const char* _in_data, char* _out_data, size_t _size)
{
	memset( _out_data, 0, _size);

	for ( size_t i = 0;  i < _size;  i++)
	{
		unsigned char _data = (unsigned char)_in_data[ i];
		_out_data[ i] = (char)( _data - ENCRYPTKEY[ i % 1024]);
	}

	return true;
}


bool XCheckSumEncrypt::Decrypt( const char* _in_data, char* _out_data, size_t _size)
{
	memset( _out_data, 0, _size);

	for ( size_t i = 0;  i < _size;  i++)
	{
		unsigned char _data = (unsigned char)_in_data[ i];
		_out_data[ i] = (char)( _data + ENCRYPTKEY[ i % 1024]);
	}

	return true;
}
